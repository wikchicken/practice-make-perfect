class Solution {
public:
    int maxProfit(vector<int>& prices) {
        
        if(prices.size() < 2)
            return 0;
        
        const int n = prices.size();
        vector<int> maxleft(n, 0);
        vector<int> maxright(n, 0);
        int min_price=prices[0];
        int max_price=prices[n-1];
        int max_profit = 0;

        for(int i=1; i<n; ++i)
        {
            min_price = min(min_price, prices[i]);
            maxleft[i] = max(maxleft[i-1], prices[i]-min_price);
        }

        for(int i=n-2; i>=0; --i)
        {
            max_price = max(max_price, prices[i]);
            maxright[i] = max(maxright[i+1], max_price-prices[i]);
        }

        for(int i=0; i<n; ++i)
        {
            max_profit = max(max_profit, maxleft[i]+maxright[i]);
        }

        return max_profit;
    }
};
